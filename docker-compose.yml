# This file is intentionally left blank for now. 

version: '3.8'

networks:
  talent-management-net:
    driver: bridge

services:
  gateway:
    build: ./services/gateway
    ports:
      - "8000:8000"
    env_file:
      - ./services/gateway/.env
    depends_on:
      feedback_service:
        condition: service_healthy
      member_service:
        condition: service_healthy
    networks:
      - talent-management-net

  feedback_service:
    build: ./services/feedback_service
    ports:
      - "8001:8001"
    env_file:
      - ./services/feedback_service/.env
    depends_on:
      db-init:
        condition: service_started
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8001/health')"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - talent-management-net

  member_service:
    build: ./services/member_service
    ports:
      - "8003:8002"
    env_file:
      - ./services/member_service/.env
    depends_on:
      db-init:
        condition: service_started
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8002/health')"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - talent-management-net

  db:
    image: postgres:13
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=talent_management_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/create-dbs.sh:/docker-entrypoint-initdb.d/create-dbs.sh
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d feedback_db"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - talent-management-net

  db-init:
    build:
      context: .
      dockerfile: tests/Dockerfile
    environment:
      - DATABASE_URL=postgresql://user:password@db:5432/feedback_db
    depends_on:
      db:
        condition: service_healthy
    command: ["python", "scripts/init_db.py"]
    networks:
      - talent-management-net

  tests:
    build:
      context: .
      dockerfile: tests/Dockerfile
    env_file:
      - ./services/gateway/.env
    environment:
      - GATEWAY_URL=http://gateway:8000
      - DATABASE_URL=postgresql://dummy:dummy@dummy/dummy # For pydantic validation
      - FEEDBACK_DATABASE_URL=postgresql://user:password@db:5432/feedback_db_test
      - MEMBER_DATABASE_URL=postgresql://user:password@db:5432/member_db_test
    depends_on:
      - gateway
      - feedback_service
      - member_service
      - db-init
    command: ["sh", "-c", "PYTHONPATH=. pytest -v --cov=services"]
    networks:
      - talent-management-net

volumes:
  postgres_data: 